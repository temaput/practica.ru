version: "3.7"

services:
    traefik:
        restart: always
        image: "traefik:v2.2"
        command:
        - "--log.level=DEBUG"
        - "--api.insecure=false"
        - "--providers.docker=true"
        - "--providers.docker.exposedbydefault=false"
        - "--entrypoints.websecure.address=:443"
        - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
        - "--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
        - "--certificatesresolvers.myresolver.acme.email=ap@ucoders.dev"
        - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
        ports:
        - "8001:443"
        volumes:
        - "/var/run/docker.sock:/var/run/docker.sock:ro"
        - "letsencrypt:/letsencrypt"

    cache:
      image: redis
    db:
      build:
        context: .
        dockerfile: postgres_ru_Dockerfile
      volumes:
        - data:/var/lib/postgresql/data
      environment:
        POSTGRES_USER:
        POSTGRES_PASSWORD:
        POSTGRES_DB:
        PGDATA: "/var/lib/postgresql/data/pgdata"
    web:
      build: .
      depends_on:
        - cache
        - db
      links:
        - cache:redis
      volumes:
        - data:/data
      env_file:
        - .env
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.web.rule=Host(`${PRACTICA_HOST}`)"
        - "traefik.http.routers.web.entrypoints=websecure"
        - "traefik.http.routers.web.tls.certresolver=myresolver"
volumes:
  data:
  letsencrypt:
